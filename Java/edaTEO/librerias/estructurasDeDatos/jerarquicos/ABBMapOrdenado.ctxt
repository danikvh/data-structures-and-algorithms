#BlueJ class context
comment0.target=ABBMapOrdenado
comment0.text=\r\n\ Write\ a\ description\ of\ class\ ABBMapOrdenado\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=ABBMapOrdenado()
comment10.params=
comment10.target=librerias.estructurasDeDatos.modelos.EntradaMap\ recuperarEntradaMax()
comment10.text=\ SII\ \!esVacio()\:\ \r\nrecupera\ la\ Entrada\ de\ Clave\ maxima\ de\ un\ Map\ Ordenado
comment11.params=
comment11.target=java.lang.Comparable\ recuperarMax()
comment11.text=SII\ \!esVacio()\:\ recupera\ la\ Clave\ maxima\ de\ un\ Map\ Ordenado
comment12.params=c
comment12.target=librerias.estructurasDeDatos.modelos.EntradaMap\ sucesorEntrada(java.lang.Comparable)
comment12.text=\ SII\ \!esVacio()\:\ recupera\ la\ Entrada\ siguiente\ a\ c\r\nsegun\ el\ orden\ establecido\ entre\ claves
comment13.params=c
comment13.target=java.lang.Comparable\ sucesor(java.lang.Comparable)
comment13.text=\ SII\ \!esVacio()\:\ recupera\ la\ clave\ siguiente\ a\ c\r\nsegun\ el\ orden\ establecido\ entre\ claves
comment14.params=c
comment14.target=librerias.estructurasDeDatos.modelos.EntradaMap\ predecesorEntrada(java.lang.Comparable)
comment14.text=\ SII\ \!esVacio()\:\ recupera\ la\ Entrada\ anterior\ a\ c\r\nsegun\ el\ orden\ establecido\ entre\ claves
comment15.params=c
comment15.target=java.lang.Comparable\ predecesor(java.lang.Comparable)
comment15.text=\ SII\ \!esVacio()\:\ recupera\ la\ clave\ anterior\ a\ c\r\nsegun\ el\ orden\ establecido\ entre\ claves
comment16.params=
comment16.target=librerias.estructurasDeDatos.modelos.EntradaMap\ eliminarEntradaMin()
comment16.text=\ SII\ \!esVacio()\:\ \r\nelimina\ y\ devuelve\ la\ Entrada\ de\ Clave\ minima\ de\ un\ Map\ Ordenado
comment17.params=
comment17.target=java.lang.Comparable\ eliminarMin()
comment17.text=\ SII\ \!esVacio()\:\ \r\nelimina\ y\ devuelve\ la\ Clave\ minima\ de\ un\ Map\ Ordenado
comment2.params=c\ v
comment2.target=java.lang.Object\ insertar(java.lang.Comparable,\ java.lang.Object)
comment2.text=\ inserta\ la\ Entrada\ (c,v)\ en\ un\ Map\ y\ devuelve\ null;\ si\ ya\r\n\ \ existe\ una\ Entrada\ de\ Clave\ c\ en\ el\ Map,\ devuelve\ su\ valor\ \r\n\ \ asociado\ y\ lo\ substituye\ por\ v\ (o\ actualiza\ la\ Entrada)\r\n
comment3.params=c
comment3.target=java.lang.Object\ eliminar(java.lang.Comparable)
comment3.text=\ elimina\ la\ Entrada\ con\ Clave\ c\ de\ un\ Map\ y\ devuelve\ su\ \r\n\ \ valor\ asociado,\ null\ si\ no\ existe\ una\ Entrada\ con\ dicha\ clave\r\n
comment4.params=c
comment4.target=java.lang.Object\ recuperar(java.lang.Comparable)
comment4.text=\ devuelve\ el\ valor\ asociado\ a\ la\ clave\ c\ en\ un\ Map,\r\n\ \ null\ si\ no\ existe\ una\ Entrada\ con\ dicha\ clave\r\n
comment5.params=
comment5.target=boolean\ esVacio()
comment5.text=comprueba\ si\ un\ Map\ esta\ vacio
comment6.params=
comment6.target=int\ talla()
comment6.text=devuelve\ la\ talla,\ o\ numero\ de\ Entradas,\ de\ un\ Map
comment7.params=
comment7.target=librerias.estructurasDeDatos.modelos.ListaConPI\ claves()
comment7.text=devuelve\ una\ ListaConPI\ con\ las\ talla()\ Claves\ de\ un\ Map
comment8.params=
comment8.target=librerias.estructurasDeDatos.modelos.EntradaMap\ recuperarEntradaMin()
comment8.text=\ SII\ \!esVacio()\:\ \r\nrecupera\ la\ Entrada\ de\ Clave\ minima\ de\ un\ Map\ Ordenado
comment9.params=
comment9.target=java.lang.Comparable\ recuperarMin()
comment9.text=SII\ \!esVacio()\:\ recupera\ la\ Clave\ minima\ de\ un\ Map\ Ordenado
numComments=18
