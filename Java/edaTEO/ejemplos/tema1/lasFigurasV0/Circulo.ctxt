#BlueJ class context
comment0.target=Circulo
comment1.params=radio\ color\ centro
comment1.target=Circulo(double,\ java.lang.String,\ java.awt.geom.Point2D.Double)
comment1.text=crea\ un\ C\u00EDrculo\ de\ radio\ r,\ color\ c\ y\ centro\ en\ el\ Punto\ p
comment10.params=
comment10.target=double\ perimetro()
comment10.text=calcula\ el\ per\u00EDmetro\ de\ un\ C\u00EDrculo
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=obtiene\ el\ String\ que\ representa\ a\ un\ C\u00EDrculo
comment12.params=x
comment12.target=boolean\ equals(java.lang.Object)
comment12.text=indica\ si\ un\ C\u00EDrculo\ es\ igual\ a\ x,\ i.e.\ si\ tiene\ el\ mismo\ radio\ y\ color\ que\ x
comment13.params=teclado
comment13.target=Circulo\ leer(java.util.Scanner)
comment13.text=obtiene\ un\ Circulo\ leyendo\ de\ teclado\ los\ valores\ de\ sus\ componentes
comment2.params=
comment2.target=Circulo()
comment2.text=crea\ un\ C\u00EDrculo\ est\u00E1ndar\ de\ radio\ 3.0,\ color\ rojo\ y\ centro\ en\ el\ origen
comment3.params=
comment3.target=double\ getRadio()
comment3.text=consulta\ el\ radio\ de\ un\ C\u00EDrculo
comment4.params=
comment4.target=java.lang.String\ getColor()
comment4.text=consulta\ el\ color\ de\ un\ C\u00EDrculo
comment5.params=
comment5.target=java.awt.geom.Point2D.Double\ getCentro()
comment5.text=consulta\ el\ Centro\ de\ un\ C\u00EDrculo
comment6.params=nuevoRadio
comment6.target=void\ setRadio(double)
comment6.text=actualiza\ el\ radio\ de\ un\ C\u00EDrculo\ a\ nuevoRadio
comment7.params=nuevoColor
comment7.target=void\ setColor(java.lang.String)
comment7.text=actualiza\ el\ color\ de\ un\ C\u00EDrculo\ a\ nuevoColor
comment8.params=nuevoCentro
comment8.target=void\ setCentro(java.awt.geom.Point2D.Double)
comment8.text=actualiza\ el\ Centro\ de\ un\ C\u00EDrculo\ a\ nuevoCentro
comment9.params=
comment9.target=double\ area()
comment9.text=calcula\ el\ \ \u00E1rea\ de\ un\ C\u00EDrculo
numComments=14
